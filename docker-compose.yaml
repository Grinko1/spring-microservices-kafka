version: '3'

services:
  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    networks:
      - kafka-network

  kafka:
    image: confluentinc/cp-kafka:latest
    depends_on:
      - zookeeper
    ports:
      - "29092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INTERNAL://kafka:29092,EXTERNAL://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INTERNAL:PLAINTEXT,EXTERNAL:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INTERNAL
      KAFKA_ZOOKEEPER_CONNECT: "zookeeper:2181"
      KAFKA_BROKER_ID: 1
      KAFKA_LOG4J_LOGGERS: "kafka.controller=INFO,kafka.producer.async.DefaultEventHandler=INFO,state.change.logger=INFO"
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      ALLOW_PLAINTEXT_LISTENER: "yes"
      KAFKA_LISTENERS: "INTERNAL://:29092,EXTERNAL://:9092"
      KAFKA_ZOOKEEPER_SESSION_TIMEOUT: "6000"
      KAFKA_RESTART_ATTEMPTS: "10"
      KAFKA_RESTART_DELAY: "5"
      ZOOKEEPER_AUTOPURGE_PURGE_INTERVAL: "0"
    networks:
      - kafka-network
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-ui
    ports:
      - 28080:8080
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
    depends_on:
      - kafka
    networks:
      - kafka-network
networks:
  kafka-network:
    driver: bridge
#  kowl:
#    image: quay.io/cloudhut/kowl:master
#    platform: linux/arm64
#    restart: on-failure
#    volumes:
#      - ./kowl_config:/etc/kowl/
#    ports:
#      - "28080:8080"
#    entrypoint: ./kowl --config.filepath=/etc/kowl/config.yaml
#    depends_on:
#      - kafka


#
#  orders-service:
#    build:
#      context: ./orders
#    ports:
#      - "8081:8080"
#    environment:
#      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:29092
#    depends_on:
#      - kafka
#    networks:
#      - kafka-net
#
#  payment-service:
#    build:
#      context: ./payment
#    ports:
#      - "8082:8080"
#    environment:
#      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:29092
#    depends_on:
#      - kafka
#    networks:
#      - kafka-net
#
#  shipping-service:
#    build:
#      context: ./shipping
#    ports:
#      - "8083:8080"
#    environment:
#      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:29092
#    depends_on:
#      - kafka
#    networks:
#      - kafka-net
#
#  notification-service:
#    build:
#      context: ./notifications
#    ports:
#      - "8084:8080"
#    environment:
#      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:29092
#    depends_on:
#      - kafka
#    networks:
#      - kafka-net
#
#networks:
#  kafka-net:
#    driver: bridge
